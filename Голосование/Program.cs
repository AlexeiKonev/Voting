using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Голосование
{
    class Program
    {
        static void Main(string[] args)
        {
        

            Console.ForegroundColor = ConsoleColor.Blue;
            Console.WriteLine("  The foreground color is Blue");

            using (StreamReader sr = new StreamReader("test.txt"))
            {
                string line;
                // Read and display lines from the file until the end of
                // the file is reached.
                while ((line = sr.ReadLine()) != null)
                {
                    //номер строки
                    int indexLine = 0;
                    //
                    int testBlockCount;

                    //первая строка 
                    if (indexLine == 0)
                    {
                        //сохраним количество блоков
                          testBlockCount = LineToNumber(line);
                          indexLine++;
                    }

                    //встретив пустую строку
                    if (line == "")
                    {
                        
                        //увеличение номер строк
                        indexLine++;
                        // сбрасываем итерацию 
                        break;
                    }

                    if(indexLine == 2)
                    {

                    }

                    if(line == "John Doe") { }

                    if(line == "Jane Smith ") { }

                    if(line == "Jane Austen") { }
                    
                     

                    Console.WriteLine(line);



                }
            }



            Console.ReadKey();
        }

        private static int LineToNumber(string line)
        {
            int num;
            //  строку возвращаем как число  
            return  num  = int.Parse(line);
        }



        /*
         * Австралийские бюллетени требуют, чтобы избиратели расположили всех кандидатов в порядке 
предпочтения. 
Первоначально учитывается только первый кандидат из получившегося списка, и если 
один из кандидатов набрал более 50% голосов,
то он считается избранным. 
Тем не менее, если ни 
один из кандидатов не набрал более 50% голосов, все кандидаты с наименьшим числом голосов 
выбывают.
Бюллетени, засчитанные в пользу этих кандидатов, засчитываются в пользу не 
выбывшего кандидата, который идет следующим по порядку предпочтения. 
Этот процесс 
исключения самых слабых кандидатов и пересчет их бюллетеней в пользу следующего по порядку
предпочтения не выбывшего кандидата продолжается до тех пор,
пока один из кандидатов не наберет 
более 50% голосов или пока у всех кандидатов не окажется одинаковое число голосов. 
Входные данные 
Входные данные начинаются со строки, содержащей одно положительное целое число, которое 
означает количество тестовых блоков, за которой следует пустая строка. Между двумя 
последовательными тестовыми блоками также находится пустая строка. 
Первая строка каждого блока – это целое число n  20 , означающее число кандидатов. Следующие n
строк содержат имена кандидатов, каждое до 80 символов длиной и содержащее любые печатаемые 
символы. Далее следуют до 1000 строк, каждая включает содержимое бюллетеня. Каждый бюллетень 
содержит числа от 1 до n в каком-либо порядке. Первое число обозначает наиболее 
предпочтительного кандидата, второе - второго по предпочтимости и т. д. 
Выходные данные 
Выходные данные для каждого тестового блока содержат одну строку, содержащую имя победителя, 
или несколько строк, содержащих имена всех кандидатов, которые набрали одинаковое число 
голосов. Выходные данные для каждых двух последовательных блоков должны разделяться пустой 
строкой. 
Пример входных данных Пример соответствующих выходных данных 
1
3 
John Doe 
Jane Smith 
Jane Austen 
1 2 3 
2 1 3 
2 3 1 
1 2 3 
3 1 2
John Doe
Требования к программе 
Программа должна быть написана на языке С# и представлять собой консольное приложение. Запуск 
программы производится из командной строки с одним параметром – именем файла данных 
(текстовый файл). Для проверки предоставляются: исходный код и исполняемый файл приложения.
         * 
         */
    }

    public class Bill
    {
        //билютень

    }
    public class Candidat
    {
        //кандидат
        private int _voicesPercent;

        public int VoicesPercent { get => _voicesPercent; set => _voicesPercent = value; }

        private int _candidateId;


    }
}
